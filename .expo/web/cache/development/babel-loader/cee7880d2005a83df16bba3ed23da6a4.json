{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React, { useState, UseEffect } from \"react\";\nimport KeyboardAvoidingView from \"react-native-web/dist/exports/KeyboardAvoidingView\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport { JSON } from \"sequelize/dist\";\nimport { css } from \"../assets/css/Css\";\nimport AsyncStorage from '@react-native-async-storage/async-storage';\nexport default function Home() {\n  var _useState = useState('none'),\n      _useState2 = _slicedToArray(_useState, 2),\n      display = _useState2[0],\n      setDisplay = _useState2[1];\n\n  var _useState3 = useState(null),\n      _useState4 = _slicedToArray(_useState3, 2),\n      user = _useState4[0],\n      setUser = _useState4[1];\n\n  var _useState5 = useState(null),\n      _useState6 = _slicedToArray(_useState5, 2),\n      password = _useState6[0],\n      setPassword = _useState6[1];\n\n  var _useState7 = useState(null),\n      _useState8 = _slicedToArray(_useState7, 2),\n      login = _useState8[0],\n      setLogin = _useState8[1];\n\n  function sendForm() {\n    var response, json, userData, resData;\n    return _regeneratorRuntime.async(function sendForm$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return _regeneratorRuntime.awrap(fetch('http://192.168.0.104:3000/login', {\n              method: 'POST',\n              headers: {\n                Accept: 'application/json',\n                'Content-Type': 'application/json'\n              },\n              body: JSON.stringify({\n                name: user,\n                password: password\n              })\n            }));\n\n          case 2:\n            response = _context.sent;\n            _context.next = 5;\n            return _regeneratorRuntime.awrap(response.json());\n\n          case 5:\n            json = _context.sent;\n\n            if (!(json === 'error')) {\n              _context.next = 11;\n              break;\n            }\n\n            setDisplay('flex');\n            setTimeout(function () {\n              setDisplay('none');\n            }, 3000);\n            _context.next = 18;\n            break;\n\n          case 11:\n            _context.next = 13;\n            return _regeneratorRuntime.awrap(AsyncStorage.setItem('userData', JSON.stringify(json)));\n\n          case 13:\n            userData = _context.sent;\n            _context.next = 16;\n            return _regeneratorRuntime.awrap(AsyncStorage.getItem('userData'));\n\n          case 16:\n            resData = _context.sent;\n            console.log(JSON.parse(resData));\n\n          case 18:\n            console.log(json);\n\n          case 19:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  }\n\n  return React.createElement(KeyboardAvoidingView, {\n    behavior: Platform.OS == 'ios' ? 'padding' : 'height',\n    style: [css.container, css.darkbg]\n  }, React.createElement(View, null, React.createElement(Image, {\n    style: css.button,\n    source: require(\"../assets/img/icon.png\")\n  })), React.createElement(View, null, React.createElement(Text, {\n    style: css.login__msg(display)\n  }, \"Usu\\xE1rio ou senha inv\\xE1lidos\")), React.createElement(View, {\n    style: css.login__form\n  }, React.createElement(TextInput, {\n    style: css.login__input,\n    placeholder: \"Usuario:\",\n    onChangeText: function onChangeText(text) {\n      return setUser(text);\n    }\n  }), React.createElement(TextInput, {\n    style: css.login__input,\n    placeholder: \"Senha:\",\n    onChangeText: function onChangeText(text) {\n      return setPassword(text);\n    },\n    secureTextEntry: true\n  }), React.createElement(TouchableOpacity, {\n    style: css.login__button,\n    onPress: function onPress() {\n      return sendForm();\n    }\n  }, React.createElement(Text, {\n    style: css.login_buttonText\n  }, \"Entrar\"))));\n}","map":{"version":3,"sources":["C:/Native/Project/views/Login.jsx"],"names":["React","useState","UseEffect","JSON","css","AsyncStorage","Home","display","setDisplay","user","setUser","password","setPassword","login","setLogin","sendForm","fetch","method","headers","Accept","body","stringify","name","response","json","setTimeout","setItem","userData","getItem","resData","console","log","parse","Platform","OS","container","darkbg","button","require","login__msg","login__form","login__input","text","login__button","login_buttonText"],"mappings":"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","sourcesContent":["import React, {useState, UseEffect} from \"react\";\r\nimport { KeyboardAvoidingView, Image,TouchableOpacity,  Text, View, TextInput, Platform} from 'react-native';\r\nimport { JSON } from \"sequelize/dist\";\r\nimport { css } from \"../assets/css/Css\";\r\nimport AsyncStorage from '@react-native-async-storage/async-storage';\r\n\r\n\r\nexport default function Home(){\r\n\r\n   const [display, setDisplay] = useState('none')\r\n   const [user, setUser] = useState(null)\r\n   const [password, setPassword] = useState(null)\r\n   const [login, setLogin] = useState(null)\r\n\r\n   // envio do formulário de login para o backend\r\n   async function sendForm(){\r\n      let response = await fetch('http://192.168.0.104:3000/login',{\r\n         method: 'POST',\r\n         headers: {\r\n            Accept: 'application/json',\r\n            'Content-Type': 'application/json'\r\n         },\r\n         body: JSON.stringify({\r\n            name: user,\r\n            password: password\r\n         }) \r\n      })\r\n\r\n\r\nlet json = await response.json()\r\nif(json === 'error'){\r\n   setDisplay('flex') \r\n   setTimeout(()=>{\r\n      setDisplay('none')\r\n   }, 3000)\r\n  \r\n}else{\r\n   let userData = await AsyncStorage.setItem('userData', JSON.stringify(json))\r\n   let resData = await AsyncStorage.getItem('userData')\r\n   console.log(JSON.parse(resData))\r\n}\r\nconsole.log(json)\r\n   }\r\n \r\n\r\n\r\n    return(\r\n       <KeyboardAvoidingView behavior={Platform.OS == 'ios' ? 'padding' : 'height'}style={[css.container, css.darkbg]}>\r\n            <View> \r\n               <Image style={css.button} source={require('../assets/img/icon.png')}/> \r\n               \r\n            </View>  \r\n            <View>\r\n                <Text style={css.login__msg(display)}>Usuário ou senha inválidos</Text>\r\n            </View>  \r\n            <View style={css.login__form}> \r\n               <TextInput style={css.login__input}placeholder='Usuario:' onChangeText={text=> setUser(text)}></TextInput>\r\n               <TextInput style={css.login__input} placeholder='Senha:' onChangeText={text=> setPassword(text)} secureTextEntry={true}></TextInput>\r\n            <TouchableOpacity style={css.login__button} onPress={()=>sendForm()}>\r\n               <Text style={css.login_buttonText}>Entrar</Text> \r\n            </TouchableOpacity>\r\n \r\n </View> \r\n       </KeyboardAvoidingView>\r\n    )\r\n}"]},"metadata":{},"sourceType":"module"}